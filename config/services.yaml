# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # GraphQL Resolvers
    App\User\API\GraphQL\MeResolver:
        tags: [ 'api_platform.graphql.resolver' ]
    App\Blog\API\GraphQL\UploadImageResolver:
        tags: [ 'api_platform.graphql.resolver' ]
    App\Blog\API\GraphQL\PostGenerateResolver:
        tags: [ 'api_platform.graphql.resolver' ]
        bind:
            string $openAIKey: '%env(OPENAI_API_KEY)%'
    App\Blog\API\GraphQL\BlogGenerateResolver:
        tags: [ 'api_platform.graphql.resolver' ]
        bind:
            string $openAIKey: '%env(OPENAI_API_KEY)%'

    # Repositories
    App\Blog\Domain\Repository\PostRepositoryInterface: '@App\Blog\Infrastructure\Repository\PostRepository'
    App\Blog\Domain\Repository\BlogRepositoryInterface: '@App\Blog\Infrastructure\Repository\BlogRepository'
    App\Blog\Domain\Repository\BlogUserRepositoryInterface: '@App\Blog\Infrastructure\Repository\BlogUserRepository'
    App\Blog\Domain\Repository\SubscriptionRepositoryInterface: '@App\Blog\Infrastructure\Repository\SubscriptionRepository'
    App\User\Domain\Repository\UserRepositoryInterface:
        class: App\User\Infrastructure\Repository\UserRepository
        tags: [ 'doctrine.repository_service' ]


    # Event Listeners
    App\Blog\Application\Listener\Blog\BeforeCreateListener:
        tags:
            - { name: doctrine.event_listener, event: 'App\Blog\Domain\Event\Blog\BeforeCreateEvent', method: '__invoke' }

    # Dependency Injection
    App\User\Application\Hydrator\UserHydratorInterface: '@App\User\Application\Hydrator\UserOutputHydrator'
    App\Blog\Application\CurrentUserProviderInterface: '@App\Blog\Infrastructure\Security\CurrentUserProvider'


